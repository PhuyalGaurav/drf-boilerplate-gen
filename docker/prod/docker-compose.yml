services:
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  web:
    build:
      context: ../..
      dockerfile: docker/prod/web/Dockerfile
    environment:
      DJANGO_SETTINGS_MODULE: config.settings
      DEBUG: "False"
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
    depends_on:
      - db
    volumes:
      - static:/app/staticfiles
      - media:/app/media

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    environment:
      DOMAIN: ${DOMAIN}
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
      - redis
    volumes:
      - static:/static
      - media:/media
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt

  certbot:
    image: certbot/certbot:latest
    entrypoint: /bin/sh -c
    command: >
      "trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --quiet --agree-tos; sleep 12h & wait $${!}; done"
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - nginx

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]

  celery:
    build:
      context: ../..
      dockerfile: docker/prod/web/Dockerfile
    command: ["sh", "-lc", "celery -A config.celery worker -l info"]
    depends_on:
      - web
      - redis
    environment:
      DJANGO_SETTINGS_MODULE: config.settings
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2

volumes:
  postgres_data:
  static:
  media:
