services:

  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  web:
    build:
      context: ../..
      dockerfile: docker/local/web/Dockerfile
    depends_on:
      - db
    expose:
      - "8000"
    volumes:
      - ../..:/app
      - static:/app/staticfiles
      - media:/app/media
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=config.settings
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - static:/static
      - media:/media
    depends_on:
      - web

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]

  celery:
    build:
      context: ../..
      dockerfile: docker/local/web/Dockerfile
    command: ["sh", "-lc", "celery -A config.celery worker -l info"]
    depends_on:
      - web
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    entrypoint: [] 
    volumes:
      - ../..:/app


volumes:
  postgres_data:
  static:
  media:
